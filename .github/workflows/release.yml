name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

env:
  SWIFT_VERSION: "6.0.1"
  SWIFT_LINUX_SDK_CHECKSUM: "d4f46ba40e11e697387468e18987ee622908bc350310d8af54eb5e17c2ff5481"
  SWIFT_LINUX_SDK_VERSION: "0.0.1"

jobs:
  build:
    name: Build binaries
    runs-on: macos-latest
    env:
      FILE_NAME: "figma-export-${{ matrix.arch }}-${{ matrix.platform }}"
    strategy:
      matrix:
        include:
          - platform: macos
            arch: arm64
            build_args: "--arch arm64"
          - platform: macos
            arch: x86_64
            build_args: "--arch x86_64"
          - platform: linux
            arch: aarch64
            build_args: "--swift-sdk aarch64-swift-linux-musl"
            linker_flags: "-Xlinker -strip-all -Xlinker -lz -Xlinker -licuuc -Xlinker -licudata -Xlinker -lssl -Xlinker -lcrypto"
          - platform: linux
            arch: x86_64
            build_args: "--swift-sdk x86_64-swift-linux-musl"
            linker_flags: "-Xlinker -strip-all -Xlinker -lz -Xlinker -licuuc -Xlinker -licudata -Xlinker -lssl -Xlinker -lcrypto"

    steps:
      - uses: actions/checkout@v4
      - uses: IlyaGulya/setup-swift@85064347ce8271c9fb1b6cf4727d18b9d076bda9
        with:
          swift-version: ${{ env.SWIFT_VERSION }}

      - name: Install Swift linux static sdk
        if: matrix.platform == 'linux'
        # language=bash
        run: |
          export _V="$SWIFT_VERSION"
          SDK_BASE_URL="https://download.swift.org/swift-${_V}-release/static-sdk/swift-${_V}-RELEASE"
          SDK_FILENAME="swift-${_V}-RELEASE_static-linux-${SWIFT_LINUX_SDK_VERSION}.artifactbundle.tar.gz"
          SDK_URL="$SDK_BASE_URL/$SDK_FILENAME"
          swift sdk install "$SDK_URL" --checksum "${SWIFT_LINUX_SDK_CHECKSUM}"

      - name: Build binary
        # language=bash
        run: |
          swift build -c release ${{ matrix.build_args }} ${{ matrix.linker_flags }}
          mv .build/release/figma-export "$FILE_NAME"

      - name: Compress executable
        uses: svenstaro/upx-action@v2
        with:
          files: |
            ${{ env.FILE_NAME }}

      - name: Upload artifact
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILE_NAME }}
          path: ${{ env.FILE_NAME }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          make_latest: true
          draft: false
          files: release-assets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}